Hi All,



Here is some c that makes a neural network and randomly mutates its weights and toplogy in the 
hope of learning a good model of inputs to outputs. 



Getting started:


enter the following commands in bash, from the project directory

make
chmod +x ./test

You're good to go!



Basic Overview:


the neural network is stored in a struct array

currently starting neuron count is defined in brain.h

any  number of inputs and outputs can be specified when advancing the neural network,  the inputs are applied starting
at index 1 and the outputs are measured starting at index inputCount + 1

any neuron can point any other neuron, so the network is not feed forward and is capable of holding state. 



Mutation:

There is no mutation oversight algorithm of simulated annleaing, it's just based on
fixed global parameters. This will need work.


weight change mutation, connection target change mutation, neuron addition/removal mutation, and connection addition/removal mutation.


Known Issues:


The network will sometimes get stuck on xor, but when it does succeed it often does so very fast. Adding propper population
management to the algorithm will fix this.



Questions/concerns:

please ask in signal chat



Cheers,



John


